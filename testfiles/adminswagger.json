{
  "swagger": "2.0",
  "paths": {
    "/go-admin-api/v1.0/announcements": {
      "get": {
        "description": "Get announcements",
        "tags": [
          "admin"
        ],
        "operationId": "AnnouncementsAdministrationV1_GetAnnouncements",
        "responses": {
          "200": {
            "description": "Announcements",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Announcement"
              }
            }
          }
        }
      },
      "post": {
        "description": "Adds announcement",
        "tags": [
          "admin"
        ],
        "operationId": "AnnouncementsAdministrationV1_AddAnnouncement",
        "parameters": [
          {
            "description": "Announcement",
            "name": "announcement",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Announcement"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Add success"
          }
        }
      }
    },
    "/go-admin-api/v1.0/announcements/{announcementid}": {
      "get": {
        "description": "Get announcement by id",
        "tags": [
          "admin"
        ],
        "operationId": "AnnouncementsAdministrationV1_GetAnnouncementByID",
        "parameters": [
          {
            "type": "string",
            "description": "The announcement id",
            "name": "announcementid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Announcement",
            "schema": {
              "items": {
                "$ref": "#/definitions/Announcement"
              }
            }
          }
        }
      },
      "delete": {
        "description": "Deletes announcement",
        "tags": [
          "admin"
        ],
        "operationId": "AnnouncementsAdministrationV1_DeleteAnnouncement",
        "parameters": [
          {
            "type": "string",
            "description": "The announcement id",
            "name": "announcementid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Delete success"
          }
        }
      }
    },
    "/go-admin-api/v1.0/inventory": {
      "put": {
        "description": "Copy inventory items from one account to another",
        "tags": [
          "admin"
        ],
        "operationId": "InventoryAdministrationV1_CopyInventory",
        "parameters": [
          {
            "description": "CopyInventoryModel",
            "name": "copyInventoryModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CopyInventoryModel"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Saved"
          }
        }
      },
      "post": {
        "description": "Save a inventory",
        "tags": [
          "admin"
        ],
        "operationId": "InventoryAdministrationV1_SaveInventory",
        "parameters": [
          {
            "description": "Player Inventory",
            "name": "inventory",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Saved"
          }
        }
      }
    },
    "/go-admin-api/v1.0/inventory/{playerid}/{itemid}": {
      "put": {
        "description": "Give a specific player a specific item",
        "tags": [
          "admin"
        ],
        "operationId": "InventoryAdministrationV1_GivePlayerItem",
        "parameters": [
          {
            "type": "string",
            "description": "The player id",
            "name": "playerid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The item id",
            "name": "itemid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Done"
          }
        }
      }
    },
    "/go-admin-api/v1.0/inventory/{userid}": {
      "get": {
        "description": "Retrieve the users inventory by user id",
        "tags": [
          "admin"
        ],
        "operationId": "InventoryAdministrationV1_GetInventoryByID",
        "parameters": [
          {
            "type": "string",
            "description": "The userid",
            "name": "userid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The inventory",
            "schema": {
              "$ref": "#/definitions/Inventory"
            }
          }
        }
      },
      "patch": {
        "description": "Resets user",
        "tags": [
          "admin"
        ],
        "operationId": "InventoryAdministrationV1_ResetUser",
        "parameters": [
          {
            "type": "string",
            "description": "The users id",
            "name": "userid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "ResetUser"
          }
        }
      }
    },
    "/go-admin-api/v1.0/meta/badwords": {
      "get": {
        "description": "Gets badwords",
        "tags": [
          "admin"
        ],
        "operationId": "MetaAdministrationV1_GetBadWords",
        "responses": {
          "200": {
            "description": "The bad words",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CensoredWord"
              }
            }
          }
        }
      },
      "put": {
        "description": "Saves bad words",
        "tags": [
          "admin"
        ],
        "operationId": "MetaAdministrationV1_SaveBadWords",
        "parameters": [
          {
            "description": "Bad Words",
            "name": "badWords",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CensoredWord"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Saved"
          }
        }
      },
      "delete": {
        "description": "Deletes bad words",
        "tags": [
          "admin"
        ],
        "operationId": "MetaAdministrationV1_DeleteBadWords",
        "parameters": [
          {
            "description": "Bad Word ids",
            "name": "badWords",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "int64"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          }
        }
      }
    },
    "/go-admin-api/v1.0/meta/badwords/reset": {
      "get": {
        "description": "Reset badwords cache",
        "tags": [
          "admin"
        ],
        "operationId": "MetaAdministrationV1_ResetBadWordsCache",
        "responses": {
          "204": {
            "description": "Cache was reset"
          }
        }
      }
    },
    "/go-admin-api/v1.0/meta/gamesettings": {
      "get": {
        "description": "Gets game settings",
        "tags": [
          "admin"
        ],
        "operationId": "MetaAdministrationV1_GetGameSettings",
        "responses": {
          "200": {
            "description": "Game settings",
            "schema": {
              "$ref": "#/definitions/GameSettings"
            }
          }
        }
      },
      "put": {
        "description": "Saves game settings",
        "tags": [
          "admin"
        ],
        "operationId": "MetaAdministrationV1_SaveGameSettings",
        "parameters": [
          {
            "description": "Game Settings",
            "name": "gameSettings",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GameSettings"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Saved"
          }
        }
      }
    },
    "/go-admin-api/v1.0/meta/levels": {
      "get": {
        "description": "Get level settings",
        "tags": [
          "admin"
        ],
        "operationId": "MetaAdministrationV1_GetLevelSettings",
        "responses": {
          "200": {
            "description": "Saved",
            "schema": {
              "$ref": "#/definitions/LevelSettings"
            }
          }
        }
      },
      "put": {
        "description": "Saves level settings",
        "tags": [
          "admin"
        ],
        "operationId": "MetaAdministrationV1_SaveLevelSettings",
        "parameters": [
          {
            "description": "Level Settings",
            "name": "levelSettings",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LevelSettings"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Saved"
          }
        }
      }
    },
    "/go-admin-api/v1.0/meta/shardsettings": {
      "get": {
        "description": "Gets shard settings",
        "tags": [
          "admin"
        ],
        "operationId": "MetaAdministrationV1_GetShardSettings",
        "responses": {
          "200": {
            "description": "Shard settings",
            "schema": {
              "$ref": "#/definitions/ShardSettings"
            }
          }
        }
      },
      "put": {
        "description": "Saves shard settings",
        "tags": [
          "admin"
        ],
        "operationId": "MetaAdministrationV1_SaveShardSettings",
        "parameters": [
          {
            "description": "Shard settings",
            "name": "shardSettings",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ShardSettings"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Saved"
          }
        }
      }
    },
    "/go-admin-api/v1.0/meta/vanity": {
      "get": {
        "description": "Gets all vanity",
        "tags": [
          "admin"
        ],
        "operationId": "MetaAdministrationV1_GetAllVanity",
        "responses": {
          "200": {
            "description": "Saved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Vanity"
              }
            }
          }
        }
      },
      "put": {
        "description": "Saves vanity",
        "tags": [
          "admin"
        ],
        "operationId": "MetaAdministrationV1_SaveVanity",
        "parameters": [
          {
            "description": "Vanity items",
            "name": "vanityItems",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Vanity"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Saved"
          }
        }
      },
      "delete": {
        "description": "Deletes vanity",
        "tags": [
          "admin"
        ],
        "operationId": "MetaAdministrationV1_RemoveVanity",
        "parameters": [
          {
            "description": "Vanity item ids to delete",
            "name": "vanityItemIds",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Removed"
          }
        }
      }
    },
    "/go-admin-api/v1.0/meta/vanity/{id}": {
      "get": {
        "description": "Gets by id",
        "tags": [
          "admin"
        ],
        "operationId": "MetaAdministrationV1_GetVanityByID",
        "parameters": [
          {
            "type": "string",
            "description": "The id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "gem",
            "schema": {
              "$ref": "#/definitions/Vanity"
            }
          }
        }
      }
    },
    "/go-admin-api/v1.0/meta/versions": {
      "get": {
        "description": "Gets version settings",
        "tags": [
          "admin"
        ],
        "operationId": "MetaAdministrationV1_GetVersionSettings",
        "responses": {
          "200": {
            "description": "Version settings",
            "schema": {
              "$ref": "#/definitions/Version"
            }
          }
        }
      },
      "put": {
        "description": "Saves version settings",
        "tags": [
          "admin"
        ],
        "operationId": "MetaAdministrationV1_SaveVersionSettings",
        "parameters": [
          {
            "description": "Version Settings",
            "name": "versionSettings",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Version"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Saved"
          }
        }
      }
    },
    "/go-admin-api/v1.0/meta/weapons": {
      "get": {
        "description": "Gets all weapons",
        "tags": [
          "admin"
        ],
        "operationId": "MetaAdministrationV1_GetAllWeapons",
        "responses": {
          "200": {
            "description": "List of weapons",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WeaponData"
              }
            }
          }
        }
      },
      "put": {
        "description": "Saves weapons",
        "tags": [
          "admin"
        ],
        "operationId": "MetaAdministrationV1_SaveWeapons",
        "parameters": [
          {
            "description": "Weapon items",
            "name": "weaponItems",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WeaponData"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Saved"
          }
        }
      },
      "delete": {
        "description": "Deletes weapons",
        "tags": [
          "admin"
        ],
        "operationId": "MetaAdministrationV1_RemoveWeapons",
        "parameters": [
          {
            "description": "Weapon item ids to delete",
            "name": "weaponItemIds",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Removed"
          }
        }
      }
    },
    "/go-admin-api/v1.0/meta/weapons/{id}": {
      "get": {
        "description": "Gets by id",
        "tags": [
          "admin"
        ],
        "operationId": "MetaAdministrationV1_GetWeaponByID",
        "parameters": [
          {
            "type": "string",
            "description": "The id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "gem",
            "schema": {
              "$ref": "#/definitions/WeaponData"
            }
          }
        }
      }
    },
    "/go-admin-api/v1.0/playerprofile": {
      "put": {
        "description": "Save a player profile",
        "tags": [
          "admin"
        ],
        "operationId": "PlayerProfileAdministrationV1_SavePlayerProfile",
        "parameters": [
          {
            "description": "Player Profile",
            "name": "playerprofile",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PlayerProfile"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Saved"
          }
        }
      }
    },
    "/go-admin-api/v1.0/playerprofile/id/{userid}": {
      "get": {
        "description": "Retrieve profile by id",
        "tags": [
          "admin"
        ],
        "operationId": "PlayerProfileAdministrationV1_GetById",
        "parameters": [
          {
            "type": "string",
            "description": "The users id",
            "name": "userid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "List of PlayerProfiles",
            "schema": {
              "$ref\"": "#/definitions/PlayerProfile"
            }
          }
        }
      }
    },
    "/go-admin-api/v1.0/playerprofile/missions": {
      "get": {
        "description": "Gets all missions",
        "tags": [
          "admin"
        ],
        "operationId": "PlayerProfileAdministrationV1_GetAllMissions",
        "responses": {
          "200": {
            "description": "Saved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Mission"
              }
            }
          }
        }
      },
      "put": {
        "description": "Saves missions",
        "tags": [
          "admin"
        ],
        "operationId": "PlayerProfileAdministrationV1_SaveMissions",
        "parameters": [
          {
            "description": "Mission items",
            "name": "missionItems",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Mission"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Saved"
          }
        }
      },
      "delete": {
        "description": "Deletes mission",
        "tags": [
          "admin"
        ],
        "operationId": "PlayerProfileAdministrationV1_RemoveMissions",
        "parameters": [
          {
            "description": "Mission item ids to delete",
            "name": "missionItemIds",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Removed"
          }
        }
      }
    },
    "/go-admin-api/v1.0/playerprofile/missions/reset": {
      "get": {
        "description": "Reset mission cache",
        "tags": [
          "admin"
        ],
        "operationId": "PlayerProfileAdministrationV1_ResetMissionCache",
        "responses": {
          "204": {
            "description": "Cache was reset"
          }
        }
      }
    },
    "/go-admin-api/v1.0/playerprofile/missions/{id}": {
      "get": {
        "description": "Gets by id",
        "tags": [
          "admin"
        ],
        "operationId": "PlayerProfileAdministrationV1_GetMissionByID",
        "parameters": [
          {
            "type": "string",
            "description": "The id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "gem",
            "schema": {
              "$ref": "#/definitions/Mission"
            }
          }
        }
      }
    },
    "/go-admin-api/v1.0/playerprofile/onboardingmissions": {
      "get": {
        "description": "Gets all onboarding missions",
        "tags": [
          "admin"
        ],
        "operationId": "PlayerProfileAdministrationV1_GetAllOnboardingMissions",
        "responses": {
          "200": {
            "description": "Saved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OnboardingMission"
              }
            }
          }
        }
      },
      "put": {
        "description": "Saves onboarding missions",
        "tags": [
          "admin"
        ],
        "operationId": "PlayerProfileAdministrationV1_SaveOnboardingMissions",
        "parameters": [
          {
            "description": "Mission items",
            "name": "missionItems",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OnboardingMission"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Saved"
          }
        }
      },
      "delete": {
        "description": "Deletes mission",
        "tags": [
          "admin"
        ],
        "operationId": "PlayerProfileAdministrationV1_RemoveOnboardingMissions",
        "parameters": [
          {
            "description": "Mission item ids to delete",
            "name": "missionItemIds",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Removed"
          }
        }
      }
    },
    "/go-admin-api/v1.0/playerprofile/onboardingmissions/{id}": {
      "get": {
        "description": "Gets by id",
        "tags": [
          "admin"
        ],
        "operationId": "PlayerProfileAdministrationV1_GetOnboardingMissionByID",
        "parameters": [
          {
            "type": "string",
            "description": "The id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "gem",
            "schema": {
              "$ref": "#/definitions/OnboardingMission"
            }
          }
        }
      }
    },
    "/go-admin-api/v1.0/playerprofile/transfer/{fromuserid}/{touserid}": {
      "post": {
        "description": "Performs an account transfer",
        "tags": [
          "admin"
        ],
        "operationId": "PlayerProfileAdministrationV1_TransferAccount",
        "parameters": [
          {
            "type": "string",
            "description": "The user id to transfer from",
            "name": "fromuserid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The user id to transfer to",
            "name": "touserid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "TransferAccount"
          }
        }
      }
    },
    "/go-admin-api/v1.0/playerprofile/{userid}": {
      "patch": {
        "description": "Resets user",
        "tags": [
          "admin"
        ],
        "operationId": "PlayerProfileAdministrationV1_ResetUser",
        "parameters": [
          {
            "type": "string",
            "description": "The users id",
            "name": "userid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "ResetUser"
          }
        }
      }
    },
    "/go-admin-api/v1.0/playerprofile/{username}": {
      "get": {
        "description": "Retrieve profiles by username (with or without uniqueId separated by #)",
        "tags": [
          "admin"
        ],
        "operationId": "PlayerProfileAdministrationV1_GetByUsername",
        "parameters": [
          {
            "type": "string",
            "description": "Username (with or without uniqueId separated by #)",
            "name": "username",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "List of PlayerProfiles",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PlayerProfile"
              }
            }
          }
        }
      },
      "put": {
        "description": "Save a player profile",
        "tags": [
          "admin"
        ],
        "operationId": "PlayerProfileAdministrationV1_ChangeUsernameOnPlayerProfile",
        "parameters": [
          {
            "type": "string",
            "description": "Username",
            "name": "username",
            "in": "path",
            "required": true
          },
          {
            "description": "Player Profile",
            "name": "playerprofile",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PlayerProfile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Saved",
            "schema": {
              "$ref": "#/definitions/PlayerProfile"
            }
          }
        }
      }
    },
    "/go-admin-api/v1.0/stats/{userid}": {
      "get": {
        "description": "Retrieve stats by id",
        "tags": [
          "admin"
        ],
        "operationId": "StatsAdministrationV1_GetById",
        "parameters": [
          {
            "type": "string",
            "description": "The users id",
            "name": "userid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Stats",
            "schema": {
              "$ref\"": "#/definitions/PlayerStats"
            }
          }
        }
      },
      "patch": {
        "description": "Resets user",
        "tags": [
          "admin"
        ],
        "operationId": "StatsAdministrationV1_ResetUser",
        "parameters": [
          {
            "type": "string",
            "description": "The users id",
            "name": "userid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "ResetUser"
          }
        }
      }
    },
    "/go-admin-api/v1.0/store/coins": {
      "get": {
        "description": "Gets all coins",
        "tags": [
          "admin"
        ],
        "operationId": "StoreAdministrationV1_GetAllCoins",
        "responses": {
          "200": {
            "description": "Array of coins",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Coin"
              }
            }
          }
        }
      },
      "put": {
        "description": "Saves coins",
        "tags": [
          "admin"
        ],
        "operationId": "StoreAdministrationV1_AddCoinProducts",
        "parameters": [
          {
            "description": "Coins",
            "name": "coins",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Coin"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Saved"
          }
        }
      },
      "delete": {
        "description": "Deletes coins",
        "tags": [
          "admin"
        ],
        "operationId": "StoreAdministrationV1_RemoveCoinProducts",
        "parameters": [
          {
            "description": "coins",
            "name": "coins",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          }
        }
      }
    },
    "/go-admin-api/v1.0/store/coins/{id}": {
      "get": {
        "description": "Gets by id",
        "tags": [
          "admin"
        ],
        "operationId": "StoreAdministrationV1_GetCoinByID",
        "parameters": [
          {
            "type": "string",
            "description": "The id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "coin",
            "schema": {
              "$ref": "#/definitions/Coin"
            }
          }
        }
      }
    },
    "/go-admin-api/v1.0/store/deals": {
      "get": {
        "description": "Gets deals settings",
        "tags": [
          "admin"
        ],
        "operationId": "StoreAdministrationV1_GetDeals",
        "responses": {
          "200": {
            "description": "Deals",
            "schema": {
              "$ref": "#/definitions/Deals"
            }
          }
        }
      },
      "put": {
        "description": "Saves deals settings",
        "tags": [
          "admin"
        ],
        "operationId": "StoreAdministrationV1_SaveDeals",
        "parameters": [
          {
            "description": "Deals",
            "name": "deals",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Deals"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Saved"
          }
        }
      }
    },
    "/go-admin-api/v1.0/store/gems": {
      "get": {
        "description": "Gets all gems",
        "tags": [
          "admin"
        ],
        "operationId": "StoreAdministrationV1_GetAllGems",
        "responses": {
          "200": {
            "description": "Array of gems",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Gem"
              }
            }
          }
        }
      },
      "put": {
        "description": "Saves gems",
        "tags": [
          "admin"
        ],
        "operationId": "StoreAdministrationV1_AddGemProducts",
        "parameters": [
          {
            "description": "Gems",
            "name": "gems",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Gem"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Saved"
          }
        }
      },
      "delete": {
        "description": "Deletes gems",
        "tags": [
          "admin"
        ],
        "operationId": "StoreAdministrationV1_RemoveGemProducts",
        "parameters": [
          {
            "description": "Gems",
            "name": "gems",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          }
        }
      }
    },
    "/go-admin-api/v1.0/store/gems/{id}": {
      "get": {
        "description": "Gets by id",
        "tags": [
          "admin"
        ],
        "operationId": "StoreAdministrationV1_GetGemByID",
        "parameters": [
          {
            "type": "string",
            "description": "The id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "gem",
            "schema": {
              "$ref": "#/definitions/Gem"
            }
          }
        }
      }
    },
    "/go-admin-api/v1.0/store/lootbox": {
      "get": {
        "description": "Gets all lootboxes",
        "tags": [
          "admin"
        ],
        "operationId": "StoreAdministrationV1_GetAllLootBoxes",
        "responses": {
          "200": {
            "description": "Array of lootboxes",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LootBox"
              }
            }
          }
        }
      },
      "put": {
        "description": "Saves lootboxes",
        "tags": [
          "admin"
        ],
        "operationId": "StoreAdministrationV1_AddLootBoxes",
        "parameters": [
          {
            "description": "Lootboxes",
            "name": "lootboxes",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LootBox"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Saved"
          }
        }
      },
      "delete": {
        "description": "Deletes lootboxes",
        "tags": [
          "admin"
        ],
        "operationId": "StoreAdministrationV1_RemoveLootBoxes",
        "parameters": [
          {
            "description": "Lootboxes",
            "name": "lootboxes",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          }
        }
      }
    },
    "/go-admin-api/v1.0/store/lootbox/{id}": {
      "get": {
        "description": "Gets by id",
        "tags": [
          "admin"
        ],
        "operationId": "StoreAdministrationV1_GetLootBoxByID",
        "parameters": [
          {
            "type": "string",
            "description": "The id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "coin",
            "schema": {
              "$ref": "#/definitions/LootBox"
            }
          }
        }
      }
    },
    "/go-admin-api/v1.0/store/offers": {
      "get": {
        "description": "Gets all offers",
        "tags": [
          "admin"
        ],
        "operationId": "StoreAdministrationV1_GetAllOffers",
        "responses": {
          "200": {
            "description": "Array of offers",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Offer"
              }
            }
          }
        }
      },
      "put": {
        "description": "Saves offers",
        "tags": [
          "admin"
        ],
        "operationId": "StoreAdministrationV1_AddOffers",
        "parameters": [
          {
            "description": "Offers",
            "name": "offers",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Offer"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Saved"
          }
        }
      },
      "delete": {
        "description": "Deletes offers",
        "tags": [
          "admin"
        ],
        "operationId": "StoreAdministrationV1_RemoveOffers",
        "parameters": [
          {
            "description": "offers",
            "name": "offers",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          }
        }
      }
    },
    "/go-admin-api/v1.0/store/offers/{offerid}": {
      "get": {
        "description": "Retrieve the offer with the given id, if any",
        "tags": [
          "admin"
        ],
        "operationId": "StoreAdministrationV1_GetOfferByID",
        "parameters": [
          {
            "type": "string",
            "description": "The offer id",
            "name": "offerid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The offer",
            "schema": {
              "$ref": "#/definitions/Offer"
            }
          }
        }
      }
    },
    "/go-admin-api/v1.0/store/offers/{playerid}/{offerid}": {
      "put": {
        "description": "Gives a player the specified offer",
        "tags": [
          "admin"
        ],
        "operationId": "StoreAdministrationV1_GivePlayerOffer",
        "parameters": [
          {
            "type": "string",
            "description": "the player id",
            "name": "playerid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The offer id",
            "name": "offerid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Done"
          }
        }
      }
    },
    "/go-admin-api/v1.0/store/scriptedlootbox": {
      "get": {
        "description": "Gets all scripted lootboxes",
        "tags": [
          "admin"
        ],
        "operationId": "StoreAdministrationV1_GetAllScriptedLootBoxes",
        "responses": {
          "200": {
            "description": "Array of scripted lootboxes",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ScriptedLootBox"
              }
            }
          }
        }
      },
      "put": {
        "description": "Saves scripted lootboxes",
        "tags": [
          "admin"
        ],
        "operationId": "StoreAdministrationV1_AddScriptedLootBoxes",
        "parameters": [
          {
            "description": "Scripted Lootboxes",
            "name": "scriptedlootboxes",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ScriptedLootBox"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Saved"
          }
        }
      },
      "delete": {
        "description": "Deletes scripted lootboxes",
        "tags": [
          "admin"
        ],
        "operationId": "StoreAdministrationV1_RemoveScriptedLootBoxes",
        "parameters": [
          {
            "description": "Scripted Lootboxes",
            "name": "scriptedlootboxes",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          }
        }
      }
    },
    "/go-admin-api/v1.0/store/scriptedlootbox/{id}": {
      "get": {
        "description": "Gets by id",
        "tags": [
          "admin"
        ],
        "operationId": "StoreAdministrationV1_GetScriptedLootBoxByID",
        "parameters": [
          {
            "type": "string",
            "description": "The id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "coin",
            "schema": {
              "$ref": "#/definitions/ScriptedLootBox"
            }
          }
        }
      }
    },
    "/go-admin-api/v1.0/supportbox": {
      "get": {
        "description": "Retrieve support box settings",
        "tags": [
          "admin"
        ],
        "operationId": "SupportBoxAdministrationV1_GetSettings",
        "responses": {
          "200": {
            "description": "SupportBoxSettings",
            "schema": {
              "$ref\"": "#/definitions/SupportBoxSettings"
            }
          }
        }
      },
      "put": {
        "description": "Save support box settings",
        "tags": [
          "admin"
        ],
        "operationId": "SupportBoxAdministrationV1_PutSettings",
        "parameters": [
          {
            "description": "Settings",
            "name": "settings",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SupportBoxSettings"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "SupportBoxSettings"
          }
        }
      }
    },
    "/go-admin-api/v1.0/supportbox/{userid}": {
      "get": {
        "description": "Retrieve player support box status by id",
        "tags": [
          "admin"
        ],
        "operationId": "SupportBoxAdministrationV1_GetPlayerSupportBoxStatus",
        "parameters": [
          {
            "type": "string",
            "description": "The users id",
            "name": "userid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "PlayerSupportBoxStatus",
            "schema": {
              "$ref\"": "#/definitions/PlayerSupportBoxStatus"
            }
          }
        }
      },
      "put": {
        "description": "Save support box status",
        "tags": [
          "admin"
        ],
        "operationId": "SupportBoxAdministrationV1_PutPlayerSupportBoxStatus",
        "parameters": [
          {
            "description": "status",
            "name": "settings",
            "in": "body",
            "required": true,
            "schema": {
              "$ref\"": "#/definitions/PlayerSupportBoxStatus"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "SupportBoxStatus"
          }
        }
      },
      "patch": {
        "description": "Resets user",
        "tags": [
          "admin"
        ],
        "operationId": "SupportBoxAdministrationV1_ResetUser",
        "parameters": [
          {
            "type": "string",
            "description": "The users id",
            "name": "userid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "ResetUser"
          }
        }
      }
    },
    "/go-admin-api/v1.0/trophyroad": {
      "get": {
        "description": "Gets trophy road settings",
        "tags": [
          "admin"
        ],
        "operationId": "TrophyRoadAdministrationV1_GetTrophyRoadSettings",
        "responses": {
          "200": {
            "description": "Trophy road settings",
            "schema": {
              "$ref": "#/definitions/TrophyRoad"
            }
          }
        }
      },
      "put": {
        "description": "Saves trophy road settings",
        "tags": [
          "admin"
        ],
        "operationId": "TrophyRoadAdministrationV1_SaveTrophyRoadSettings",
        "parameters": [
          {
            "description": "Trophy road settings",
            "name": "trophyRoadSettings",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TrophyRoad"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Saved"
          }
        }
      }
    },
    "/go-admin-api/v1.0/trophyroad/{userid}": {
      "patch": {
        "description": "Resets user",
        "tags": [
          "admin"
        ],
        "operationId": "TrophyRoadAdministrationV1_ResetUser",
        "parameters": [
          {
            "type": "string",
            "description": "The users id",
            "name": "userid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "ResetUser"
          }
        }
      }
    },
    "/go-admin-api/v1.0/webui/api/commit": {
      "post": {
        "description": "Commits",
        "tags": [
          "admin"
        ],
        "operationId": "AdministrationV1_Commit",
        "parameters": [
          {
            "description": "Commit Request",
            "name": "commitRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CommitRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Completed"
          }
        }
      }
    }
  },
  "definitions": {
    "ActiveBundle": {
      "description": "Used to see what bundles is currently active for a given user.",
      "type": "object",
      "title": "ActiveBundles is stored in cache (for 3 days, like all other player related info).",
      "properties": {
        "bundle": {
          "$ref": "#/definitions/Bundle"
        },
        "cooldownStartedTime": {
          "description": "CooldownStartedTime will be set when the user purchases the bundle",
          "type": "string",
          "format": "date-time",
          "x-go-name": "CooldownStartedTime"
        },
        "durationStartedTime": {
          "description": "DurationStartedTime will be set the first time the bundle is provided for purchase",
          "type": "string",
          "format": "date-time",
          "x-go-name": "DurationStartedTime"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/store/pkg/store/datastores/bundle"
    },
    "ActiveBundles": {
      "description": "Used to see what bundles is currently active for a given user.",
      "type": "object",
      "title": "ActiveBundles is stored in cache (for 3 days, like all other player related info).",
      "properties": {
        "bundles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActiveBundle"
          },
          "x-go-name": "Bundles"
        },
        "cooldown": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Cooldown"
        },
        "queueId": {
          "type": "string",
          "x-go-name": "QueueID"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/store/pkg/store/datastores/bundle"
    },
    "AnchorPack": {
      "type": "object",
      "properties": {
        "price": {
          "type": "string",
          "x-go-name": "Price"
        },
        "timeLimitInMinutes": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "TimeLimitInMinutes"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/store/pkg/store/datastores/offers"
    },
    "Announcement": {
      "type": "object",
      "properties": {
        "body": {
          "type": "string",
          "x-go-name": "Body"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreatedDate"
        },
        "expiration": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "Expiration"
        },
        "header": {
          "type": "string",
          "x-go-name": "Header"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "rewardAmount": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "RewardAmount"
        },
        "rewardType": {
          "$ref": "#/definitions/AnnouncementRewardType"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/announcements/internal/announcements/models"
    },
    "AnnouncementRewardType": {
      "type": "integer",
      "format": "int64",
      "enum": [
        "0",
        "1",
        "2"
      ],
      "x-enumnames": [
        "None",
        "Gems",
        "Coins"
      ],
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/announcements/internal/announcements/enums/rewardtype"
    },
    "BannerData": {
      "type": "object",
      "properties": {
        "colorId": {
          "type": "string",
          "x-go-name": "ColorID"
        },
        "iconId": {
          "type": "string",
          "x-go-name": "IconID"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/playerprofile/pkg/playerprofile/datastores/playerprofile"
    },
    "BattleReport": {
      "type": "object",
      "properties": {
        "kills": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "Kills"
        },
        "leftGameEarly": {
          "type": "boolean",
          "x-go-name": "LeftGameEarly"
        },
        "placement": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "Placement"
        },
        "survivalTime": {
          "type": "number",
          "format": "float",
          "x-go-name": "SurvivalTime"
        },
        "tokenReport": {
          "$ref": "#/definitions/KeyReport"
        },
        "trophyReport": {
          "$ref": "#/definitions/TrophyReport"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/battlereport/internal/battlereport/models"
    },
    "BlueprintData": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "Amount"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/store/pkg/store/models/lootboxes"
    },
    "Bundle": {
      "type": "object",
      "properties": {
        "cost": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "Cost"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreatedDate"
        },
        "currencyType": {
          "$ref": "#/definitions/CurrencyType"
        },
        "description": {
          "type": "string",
          "x-go-name": "Description"
        },
        "hasCustomStyle": {
          "type": "boolean",
          "x-go-name": "HasCustomStyle"
        },
        "header": {
          "type": "string",
          "x-go-name": "Header"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "itemIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "ItemIds"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "LastUpdated"
        },
        "oldPrice": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "OldPrice"
        },
        "showTime": {
          "type": "boolean",
          "x-go-name": "ShowTime"
        },
        "stickerType": {
          "$ref": "#/definitions/StickerType"
        },
        "time": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "Time"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/store/pkg/store/datastores/bundle"
    },
    "CensoredWord": {
      "type": "object",
      "properties": {
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreatedDate"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "LastUpdated"
        },
        "word": {
          "type": "string",
          "x-go-name": "Word"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/meta/pkg/meta/datastores/censoring"
    },
    "ClaimRewardResult": {
      "type": "object",
      "properties": {
        "LootBoxContent": {
          "$ref": "#/definitions/LootBoxData"
        },
        "reward": {
          "$ref": "#/definitions/MilestoneReward"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/trophyroad/internal/trophyroad/service"
    },
    "Coin": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "Amount"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreatedDate"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "LastUpdated"
        },
        "price": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "Price"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/store/pkg/store/datastores/coins"
    },
    "CommitRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "json": {
          "type": "string",
          "x-go-name": "JSON"
        },
        "message": {
          "type": "string",
          "x-go-name": "Message"
        },
        "type": {
          "type": "string",
          "x-go-name": "Type"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/administration/internal/administration/slackservice"
    },
    "CopyInventoryModel": {
      "type": "object",
      "properties": {
        "newId": {
          "type": "string",
          "x-go-name": "NewID"
        },
        "oldId": {
          "type": "string",
          "x-go-name": "OldID"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/inventory/cmd/inventory"
    },
    "CurrencyType": {
      "type": "integer",
      "format": "int32",
      "enum": [
        "0",
        "1",
        "2",
        "3",
        "4"
      ],
      "x-enumnames": [
        "Gems",
        "Coins",
        "IAPTier",
        "AdView",
        "Keys"
      ],
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/store/pkg/store/enums/currencytype"
    },
    "DataResult": {
      "type": "object",
      "properties": {
        "bulletBoxPrice": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "BulletBoxPrice"
        },
        "currentServerTime": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "CurrentServerTime"
        },
        "keyPool": {
          "$ref": "#/definitions/KeyPoolSettings"
        },
        "levels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Level"
          },
          "x-go-name": "Levels"
        },
        "ranks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Rank"
          },
          "x-go-name": "Ranks"
        },
        "supportBoxObtainmentInterval": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "SupportBoxObtainmentInterval"
        },
        "version": {
          "$ref": "#/definitions/Version"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/meta/internal/meta/models"
    },
    "DbBaseStruct": {
      "description": "DbBaseStruct is the base for all datastore structs",
      "type": "object",
      "properties": {
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreatedDate"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "LastUpdated"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/shared/dstore"
    },
    "Deal": {
      "type": "object",
      "properties": {
        "currencyType": {
          "$ref": "#/definitions/CurrencyType"
        },
        "itemType": {
          "$ref": "#/definitions/StoreItemType"
        },
        "pricePerUnit": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "PricePerUnit"
        },
        "rarity": {
          "$ref": "#/definitions/Rarity"
        },
        "useWeaponYields": {
          "type": "boolean",
          "x-go-name": "UseWeaponYields"
        },
        "weaponUpgradeRollChance": {
          "description": "Value 0.4 means 40% of getting the exact amount needed to upgrade the weapon",
          "type": "number",
          "format": "float",
          "x-go-name": "WeaponUpgradeRollChance"
        },
        "weight": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "Weight"
        },
        "yield": {
          "$ref": "#/definitions/Yield"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/store/pkg/store/datastores/deals"
    },
    "Deals": {
      "type": "object",
      "properties": {
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreatedDate"
        },
        "deals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Deal"
          },
          "x-go-name": "Deals"
        },
        "gifts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Deal"
          },
          "x-go-name": "Gifts"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "interval": {
          "description": "In minutes",
          "type": "integer",
          "format": "int32",
          "x-go-name": "RefreshInterval"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "LastUpdated"
        },
        "yields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Yield"
          },
          "x-go-name": "WeaponYields"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/store/pkg/store/datastores/deals"
    },
    "Emoji": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "type": {
          "$ref": "#/definitions/EmojiType"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/playerprofile/pkg/playerprofile/datastores/playerprofile"
    },
    "EmojiType": {
      "type": "integer",
      "format": "int32",
      "enum": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6"
      ],
      "x-enumnames": [
        "Emoji0",
        "Emoji1",
        "Emoji2",
        "Emoji3",
        "EventKill",
        "EventDeath",
        "EventVictory"
      ],
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/playerprofile/pkg/playerprofile/datastores/playerprofile"
    },
    "FriendBrawl": {
      "type": "object",
      "properties": {
        "expiration": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "Expiration"
        },
        "key": {
          "type": "string",
          "x-go-name": "GameID"
        },
        "region": {
          "type": "string",
          "x-go-name": "Region"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/friendbrawl/internal/friendbrawl/models"
    },
    "GameSettings": {
      "type": "object",
      "properties": {
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreatedDate"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "keyGains": {
          "$ref": "#/definitions/KeyGains"
        },
        "keyPool": {
          "$ref": "#/definitions/KeyPoolSettings"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "LastUpdated"
        },
        "missionTiers": {
          "$ref": "#/definitions/TierSettings"
        },
        "ranks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Rank"
          },
          "x-go-name": "Ranks"
        },
        "trophyGains": {
          "$ref": "#/definitions/TrophyGains"
        },
        "trophyGainsUnranked": {
          "$ref": "#/definitions/TrophyGains"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/meta/pkg/meta/datastores/gamesettings"
    },
    "Gem": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "Amount"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreatedDate"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "LastUpdated"
        },
        "valueType": {
          "$ref": "#/definitions/GemValue"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/store/pkg/store/datastores/gems"
    },
    "GemValue": {
      "type": "integer",
      "format": "int64",
      "enum": [
        "0",
        "1",
        "2"
      ],
      "x-enumnames": [
        "None",
        "Hot",
        "Value"
      ],
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/store/pkg/store/enums/gemvaluetype"
    },
    "IAPRequest": {
      "type": "object",
      "properties": {
        "bundleId": {
          "type": "string",
          "x-go-name": "BundleID"
        },
        "productId": {
          "type": "string",
          "x-go-name": "ProductID"
        },
        "receipt": {
          "type": "string",
          "x-go-name": "Receipt"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/store/internal/store/models"
    },
    "Inventory": {
      "type": "object",
      "properties": {
        "bundles": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Bundles"
        },
        "contentCodeIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "ContentCodeIds"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreatedDate"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Item"
          },
          "x-go-name": "Items"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "LastUpdated"
        },
        "offers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Offers"
        },
        "weapons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Weapon"
          },
          "x-go-name": "Weapons"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/inventory/pkg/inventory/datastores/inventory"
    },
    "Item": {
      "type": "object",
      "properties": {
        "excludeFromLootBoxes": {
          "type": "boolean",
          "x-go-name": "ExcludedFromLootBoxes"
        },
        "id": {
          "type": "string",
          "x-go-name": "ItemID"
        },
        "isLocked": {
          "type": "boolean",
          "x-go-name": "IsLocked"
        },
        "points": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "Points"
        },
        "unlockCostCoins": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "UnlockCostCoins"
        },
        "unlockCostPoints": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "UnlockCostPoints"
        },
        "xpReward": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "XPReward"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/inventory/pkg/inventory/datastores/inventory"
    },
    "ItemType": {
      "type": "integer",
      "format": "int64",
      "enum": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5"
      ],
      "x-enumnames": [
        "BannerColor",
        "BannerIcon",
        "Emote",
        "GraveStone",
        "Crate",
        "Character"
      ],
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/meta/pkg/meta/enums/itemtype"
    },
    "KeyGains": {
      "type": "object",
      "properties": {
        "kill": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "Kill"
        },
        "placements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlacementValue"
          },
          "x-go-name": "Placements"
        },
        "rankUp": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "RankUp"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/meta/pkg/meta/datastores/gamesettings"
    },
    "KeyPool": {
      "type": "object",
      "title": "KeyPool ...",
      "properties": {
        "keys": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "Keys"
        },
        "lastKeyObtainment": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "LastKeyObtainment"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/playerprofile/pkg/playerprofile/datastores/playerprofile"
    },
    "KeyPoolSettings": {
      "type": "object",
      "properties": {
        "capacity": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "Capacity"
        },
        "obtainmentInterval": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "ObtainmentInterval"
        },
        "obtainmentValue": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "ObtainmentValue"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/meta/pkg/meta/datastores/gamesettings"
    },
    "KeyReport": {
      "type": "object",
      "properties": {
        "keyDoublersAfterMatch": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "KeyDoublersAfterMatch"
        },
        "keyDoublersBeforeMatch": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "KeyDoublersBeforeMatch"
        },
        "keyPoolAfterMatch": {
          "$ref": "#/definitions/KeyPool"
        },
        "keyPoolBeforeMatch": {
          "$ref": "#/definitions/KeyPool"
        },
        "keysAfterMatch": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "KeysAfterMatch"
        },
        "keysBeforeMatch": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "KeysBeforeMatch"
        },
        "keysFromDoublers": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "KeysFromDoublers"
        },
        "keysFromKills": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "KeysFromKills"
        },
        "keysFromMissions": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "KeysFromMissions"
        },
        "keysFromPlacement": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "KeysFromPlacement"
        },
        "keysFromRankUp": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "KeysFromRankUp"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/battlereport/internal/battlereport/models"
    },
    "LeaderboardItem": {
      "type": "object",
      "properties": {
        "bannerColorId": {
          "type": "string",
          "x-go-name": "BannerColorID"
        },
        "bannerIconId": {
          "type": "string",
          "x-go-name": "BannerIconID"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "powerXP": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "PowerXP"
        },
        "rank": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "Rank"
        },
        "stats": {
          "$ref": "#/definitions/Stats"
        },
        "trophies": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "Trophies"
        },
        "uniqueId": {
          "type": "string",
          "x-go-name": "UniqueID"
        },
        "username": {
          "type": "string",
          "x-go-name": "Username"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/leaderboard/internal/leaderboard/models"
    },
    "Level": {
      "type": "object",
      "properties": {
        "deltaXP": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "XP"
        },
        "totalXP": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "Total"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/meta/pkg/meta/datastores/levels"
    },
    "LevelSettings": {
      "type": "object",
      "properties": {
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreatedDate"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "LastUpdated"
        },
        "levels": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "x-go-name": "Levels"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/meta/pkg/meta/datastores/levels"
    },
    "LoadoutData": {
      "type": "object",
      "properties": {
        "bannerData": {
          "$ref": "#/definitions/BannerData"
        },
        "characterId": {
          "type": "string",
          "x-go-name": "CharacterID"
        },
        "crateId": {
          "type": "string",
          "x-go-name": "CrateID"
        },
        "emojis": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Emoji"
          },
          "x-go-name": "Emojis"
        },
        "gravestoneId": {
          "type": "string",
          "x-go-name": "GravestoneID"
        },
        "toolBuildId": {
          "type": "string",
          "x-go-name": "ToolBuildID"
        },
        "toolHarvestId": {
          "type": "string",
          "x-go-name": "ToolHarvestID"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/playerprofile/pkg/playerprofile/datastores/playerprofile"
    },
    "LootBox": {
      "type": "object",
      "properties": {
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreatedDate"
        },
        "currencyType": {
          "$ref": "#/definitions/CurrencyType"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "LastUpdated"
        },
        "lootBoxType": {
          "$ref": "#/definitions/LootBoxType"
        },
        "price": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "Price"
        },
        "steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LootBoxStep"
          },
          "x-go-name": "Steps"
        },
        "stickerType": {
          "$ref": "#/definitions/LootBoxStickerType"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/store/pkg/store/datastores/lootbox"
    },
    "LootBoxContent": {
      "type": "object",
      "properties": {
        "probability": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "Probability"
        },
        "rarities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RarityProbability"
          },
          "x-go-name": "Rarities"
        },
        "type": {
          "$ref": "#/definitions/RewardType"
        },
        "yield": {
          "$ref": "#/definitions/Yield"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/store/pkg/store/datastores/lootbox"
    },
    "LootBoxData": {
      "type": "object",
      "properties": {
        "blueprints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BlueprintData"
          },
          "x-go-name": "Blueprints"
        },
        "coins": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "Coins"
        },
        "gems": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "Gems"
        },
        "type": {
          "$ref": "#/definitions/LootBoxType"
        },
        "vanityCards": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VanityCardData"
          },
          "x-go-name": "VanityCards"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/store/pkg/store/models/lootboxes"
    },
    "LootBoxStep": {
      "type": "object",
      "properties": {
        "contents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LootBoxContent"
          },
          "x-go-name": "Contents"
        },
        "drawAmount": {
          "description": "The amount of times a content will be drawed doing a step",
          "type": "integer",
          "format": "int32",
          "x-go-name": "DrawAmount"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/store/pkg/store/datastores/lootbox"
    },
    "LootBoxStickerType": {
      "type": "integer",
      "format": "int32",
      "enum": [
        "0",
        "1",
        "2"
      ],
      "x-enumnames": [
        "None",
        "SkinDropHighChance",
        "SkinDropGuaranteed"
      ],
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/store/pkg/store/enums/lootboxstickertype"
    },
    "LootBoxStoreFrontData": {
      "type": "object",
      "properties": {
        "blueprintsMax": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "BlueprintsMax"
        },
        "blueprintsMin": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "BlueprintsMin"
        },
        "coinsMax": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "CoinsMax"
        },
        "coinsMin": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "CoinsMin"
        },
        "currencyType": {
          "$ref": "#/definitions/CurrencyType"
        },
        "lootBoxStickerType": {
          "$ref": "#/definitions/LootBoxStickerType"
        },
        "price": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "Price"
        },
        "type": {
          "$ref": "#/definitions/LootBoxType"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/store/cmd/store"
    },
    "LootBoxType": {
      "type": "integer",
      "format": "int32",
      "enum": [
        "0",
        "1",
        "2",
        "3",
        "4"
      ],
      "x-enumnames": [
        "BulletBox",
        "BigBox",
        "MegaBox",
        "SupportBox",
        "LoyaltyBox"
      ],
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/store/pkg/store/enums/lootboxtype"
    },
    "Milestone": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "reward": {
          "$ref": "#/definitions/MilestoneReward"
        },
        "trophiesRequired": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "TrophiesRequired"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/trophyroad/pkg/trophyroad/datastores/trophyroad"
    },
    "MilestoneReward": {
      "type": "object",
      "properties": {
        "amount": {
          "description": "If RewardType = 1 (Coins) || RewardType = 2 (Gems)",
          "type": "integer",
          "format": "int32",
          "x-go-name": "Amount"
        },
        "itemId": {
          "description": "If RewardType = 0 (Vanity)",
          "type": "string",
          "x-go-name": "ItemId"
        },
        "itemType": {
          "$ref": "#/definitions/ItemType"
        },
        "lootBoxType": {
          "$ref": "#/definitions/LootBoxType"
        },
        "rewardType": {
          "$ref": "#/definitions/MilestoneRewardType"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/trophyroad/pkg/trophyroad/datastores/trophyroad"
    },
    "MilestoneRewardType": {
      "type": "integer",
      "format": "int32",
      "enum": [
        "0",
        "1",
        "2",
        "3"
      ],
      "x-enumnames": [
        "Vanity",
        "Coins",
        "Gems",
        "LootBox"
      ],
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/trophyroad/pkg/trophyroad/datastores/trophyroad"
    },
    "Mission": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "Amount"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreatedDate"
        },
        "goal": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "Goal"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "LastUpdated"
        },
        "missionType": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "MissionType"
        },
        "rewardType": {
          "$ref": "#/definitions/MissionRewardType"
        },
        "tier": {
          "$ref": "#/definitions/Tier"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/playerprofile/pkg/playerprofile/datastores/mission"
    },
    "MissionRewardType": {
      "type": "integer",
      "format": "int32",
      "enum": [
        "0",
        "1"
      ],
      "x-enumnames": [
        "Keys",
        "Coins"
      ],
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/playerprofile/pkg/playerprofile/datastores/mission"
    },
    "Offer": {
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean",
          "x-go-name": "Active"
        },
        "anchorPack": {
          "$ref": "#/definitions/AnchorPack"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreatedDate"
        },
        "expiresAt": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "ExpiresAt"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OfferItem"
          },
          "x-go-name": "Items"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "LastUpdated"
        },
        "variants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Variant"
          },
          "x-go-name": "Variants"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/store/pkg/store/datastores/offers"
    },
    "OfferItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "x-go-name": "ID"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/store/pkg/store/datastores/offers"
    },
    "OfferPurchaseResults": {
      "type": "object",
      "properties": {
        "vanity": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Vanity"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/store/pkg/store/service/offers"
    },
    "OnboardingMission": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "Amount"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreatedDate"
        },
        "goal": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "Goal"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "LastUpdated"
        },
        "missionType": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "MissionType"
        },
        "rewardType": {
          "$ref": "#/definitions/MissionRewardType"
        },
        "sortOrder": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "SortOrder"
        },
        "tier": {
          "$ref": "#/definitions/Tier"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/playerprofile/pkg/playerprofile/datastores/mission"
    },
    "PlacementValue": {
      "type": "object",
      "properties": {
        "placement": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "Placement"
        },
        "value": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "Value"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/meta/pkg/meta/datastores/gamesettings"
    },
    "PlayerDeal": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "Amount"
        },
        "currencyType": {
          "$ref": "#/definitions/CurrencyType"
        },
        "id": {
          "type": "string",
          "x-go-name": "Id"
        },
        "itemId": {
          "type": "string",
          "x-go-name": "ItemId"
        },
        "itemType": {
          "$ref": "#/definitions/StoreItemType"
        },
        "pricePerUnit": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "PricePerUnit"
        },
        "purchased": {
          "type": "boolean",
          "x-go-name": "Purchased"
        },
        "rarity": {
          "$ref": "#/definitions/Rarity"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/store/pkg/store/datastores/playerdeals"
    },
    "PlayerDeals": {
      "type": "object",
      "properties": {
        "deals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlayerDeal"
          },
          "x-go-name": "Deals"
        },
        "nextRefresh": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "NextRefresh"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/store/pkg/store/datastores/playerdeals"
    },
    "PlayerMilestoneResult": {
      "type": "object",
      "properties": {
        "claimable": {
          "description": "Determined by HighestTrophies from Stats",
          "type": "boolean",
          "x-go-name": "Claimable"
        },
        "claimed": {
          "type": "boolean",
          "x-go-name": "Claimed"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "reward": {
          "$ref": "#/definitions/MilestoneReward"
        },
        "trophiesRequired": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "TrophiesRequired"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/trophyroad/internal/trophyroad/service"
    },
    "PlayerMission": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "Amount"
        },
        "goal": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "Goal"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "progress": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "Progress"
        },
        "rewardType": {
          "$ref": "#/definitions/MissionRewardType"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/playerprofile/pkg/playerprofile/datastores/mission"
    },
    "PlayerOffer": {
      "type": "object",
      "properties": {
        "expiresAt": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "ExpiresAt"
        },
        "finalExpire": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "FinalExpire"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "isAnchor": {
          "type": "boolean",
          "x-go-name": "IsAnchor"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OfferItem"
          },
          "x-go-name": "Items"
        },
        "variant": {
          "$ref": "#/definitions/SubVariant"
        },
        "variantIndex": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "VariantIndex"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/store/pkg/store/datastores/offers"
    },
    "PlayerProfile": {
      "type": "object",
      "title": "PlayerProfile ...",
      "properties": {
        "bannerColorId": {
          "type": "string",
          "x-go-name": "BannerColorID"
        },
        "bannerIconId": {
          "type": "string",
          "x-go-name": "BannerIconID"
        },
        "characterId": {
          "type": "string",
          "x-go-name": "CharacterID"
        },
        "coins": {
          "description": "Soft currency",
          "type": "integer",
          "format": "int32",
          "x-go-name": "Coins"
        },
        "crateId": {
          "type": "string",
          "x-go-name": "CrateID"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreatedDate"
        },
        "emojiIds": {
          "description": "Ids of the emojis selected by the player",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Emoji"
          },
          "x-go-name": "EmojiIDs"
        },
        "gems": {
          "description": "Hard currency",
          "type": "integer",
          "format": "int32",
          "x-go-name": "Gems"
        },
        "gravestoneId": {
          "type": "string",
          "x-go-name": "GravestoneID"
        },
        "hasBattlePass": {
          "type": "boolean",
          "x-go-name": "HasBattlePass"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "isDev": {
          "type": "boolean",
          "x-go-name": "IsDev"
        },
        "isVeteran": {
          "description": "Profile has been \"upgraded\": Given the 3 onboarding loot boxes, given free gems, coins converted to gems, given player power for already owned vanities",
          "type": "boolean",
          "x-go-name": "IsVeteran"
        },
        "keyDoublers": {
          "description": "When the player earns keys, they will spend a KeyDoubler (if any) for each key they earn, which will give them two keys instead of one",
          "type": "integer",
          "format": "int32",
          "x-go-name": "KeyDoublers"
        },
        "keyPool": {
          "$ref": "#/definitions/KeyPool"
        },
        "keys": {
          "description": "Keys are used for opening loot boxes",
          "type": "integer",
          "format": "int32",
          "x-go-name": "Keys"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "LastUpdated"
        },
        "missionTimestamp": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "MissionTimestamp"
        },
        "missions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlayerMission"
          },
          "x-go-name": "Missions"
        },
        "onboardingComplete": {
          "type": "boolean",
          "x-go-name": "OnboardingComplete"
        },
        "onboardingLootBoxesCompleted": {
          "type": "boolean",
          "x-go-name": "OnboardingLootBoxesCompleted"
        },
        "onboardingLootBoxesProvided": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "OnboardingLootBoxesProvided"
        },
        "powerXp": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "PowerXP"
        },
        "rank": {
          "description": "Calculated rank based on Trophies",
          "type": "integer",
          "format": "int32",
          "x-go-name": "Rank"
        },
        "reward": {
          "$ref": "#/definitions/PlayerReward"
        },
        "toolBuildId": {
          "type": "string",
          "x-go-name": "ToolBuildID"
        },
        "toolHarvestId": {
          "type": "string",
          "x-go-name": "ToolHarvestID"
        },
        "trophies": {
          "description": "Trophies measure the skill of player",
          "type": "integer",
          "format": "int32",
          "x-go-name": "Trophies"
        },
        "uniqueId": {
          "type": "string",
          "x-go-name": "UniqueID"
        },
        "username": {
          "type": "string",
          "x-go-name": "Username"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/playerprofile/pkg/playerprofile/datastores/playerprofile"
    },
    "PlayerReward": {
      "type": "object",
      "properties": {
        "coins": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "Coins"
        },
        "gems": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "Gems"
        },
        "keys": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "Keys"
        },
        "powerXp": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "PowerXP"
        },
        "reason": {
          "$ref": "#/definitions/RewardReason"
        },
        "trophies": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "Trophies"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/playerprofile/pkg/playerprofile/datastores/playerprofile/playerreward"
    },
    "PlayerStats": {
      "type": "object",
      "properties": {
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreatedDate"
        },
        "global": {
          "$ref": "#/definitions/Stats"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "LastUpdated"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/stats/pkg/stats/datastores/stats"
    },
    "PlayerSupportBoxStatus": {
      "type": "object",
      "properties": {
        "boxesObtainedCount": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "BoxesObtainedCount"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreatedDate"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "isNew": {
          "type": "boolean",
          "x-go-name": "IsNew"
        },
        "lastObtainment": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "LastObtainment"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "LastUpdated"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/supportbox/pkg/supportbox/datastores/playersupportbox"
    },
    "PlayerTrophyRoadResult": {
      "type": "object",
      "properties": {
        "milestones": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlayerMilestoneResult"
          },
          "x-go-name": "Milestones"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/trophyroad/internal/trophyroad/service"
    },
    "PurchaseCoinsResponse": {
      "type": "object",
      "properties": {
        "coins": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "Coins"
        },
        "gems": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "Gems"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/store/cmd/store"
    },
    "PurchaseResult": {
      "type": "object",
      "properties": {
        "LootBoxContent": {
          "$ref": "#/definitions/LootBoxData"
        },
        "amount": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "Amount"
        },
        "playerProfile": {
          "$ref": "#/definitions/PlayerProfile"
        },
        "price": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "Price"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/store/pkg/store/service/deals"
    },
    "Rank": {
      "type": "object",
      "properties": {
        "bracketNumber": {
          "description": "Unranked, Bronze, Silver, Gold, Platinum, Diamond, Master, Challenger",
          "type": "integer",
          "format": "int32",
          "x-go-name": "BracketNumber"
        },
        "costToPlay": {
          "description": "Number of trophies that the player \"pays\" to play a game",
          "type": "integer",
          "format": "int32",
          "x-go-name": "CostToPlay"
        },
        "rankNumber": {
          "description": "0 is Unranked. 1 is the lowest rank",
          "type": "integer",
          "format": "int32",
          "x-go-name": "RankNumber"
        },
        "subBracket": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "SubBracket"
        },
        "trophiesRequired": {
          "description": "Number of trophies required to be this rank",
          "type": "integer",
          "format": "int32",
          "x-go-name": "TrophiesRequired"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/meta/pkg/meta/datastores/gamesettings"
    },
    "Rarity": {
      "type": "integer",
      "format": "int64",
      "enum": [
        "0",
        "1",
        "2",
        "3"
      ],
      "x-enumnames": [
        "Common",
        "Rare",
        "Epic",
        "Legendary"
      ],
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/meta/pkg/meta/enums/rarity"
    },
    "RarityProbability": {
      "type": "object",
      "properties": {
        "probability": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "Probability"
        },
        "rarity": {
          "$ref": "#/definitions/Rarity"
        },
        "yield": {
          "$ref": "#/definitions/Yield"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/store/pkg/store/datastores/lootbox"
    },
    "ReportRequest": {
      "type": "object",
      "properties": {
        "cratesConstructed": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "CratesConstructed"
        },
        "kills": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "Kills"
        },
        "missions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlayerMission"
          },
          "x-go-name": "Missions"
        },
        "numberOfJumps": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "NumberOfJumps"
        },
        "placement": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "Placement"
        },
        "resourcesHarvested": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "ResourcesHarvested"
        },
        "roomId": {
          "type": "string",
          "x-go-name": "RoomID"
        },
        "survivalTime": {
          "type": "number",
          "format": "float",
          "x-go-name": "SurvivalTime"
        },
        "weaponStats": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WeaponStats"
          },
          "x-go-name": "WeaponStats"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/battlereport/internal/battlereport/models"
    },
    "RequestOffer": {
      "type": "object",
      "properties": {
        "offerId": {
          "type": "string",
          "x-go-name": "OfferID"
        },
        "variant": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Variant"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/store/pkg/store/service/offers"
    },
    "RewardReason": {
      "type": "integer",
      "format": "int32",
      "enum": [
        "0",
        "1"
      ],
      "x-enumnames": [
        "Veteran",
        "ServerOutage"
      ],
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/playerprofile/pkg/playerprofile/datastores/playerprofile/playerreward"
    },
    "RewardType": {
      "type": "integer",
      "format": "int32",
      "enum": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5"
      ],
      "x-enumnames": [
        "Vanity",
        "Weapon",
        "Coins",
        "Gems",
        "TokenDoubler",
        "Empty"
      ],
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/store/pkg/store/enums/rewardtype"
    },
    "ScriptedLootBox": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScriptedLootBoxContent"
          },
          "x-go-name": "Content"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreatedDate"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "LastUpdated"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/store/pkg/store/datastores/lootbox"
    },
    "ScriptedLootBoxContent": {
      "type": "object",
      "properties": {
        "itemId": {
          "type": "string",
          "x-go-name": "ItemID"
        },
        "type": {
          "$ref": "#/definitions/RewardType"
        },
        "yield": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "Yield"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/store/pkg/store/datastores/lootbox"
    },
    "ShardSettings": {
      "type": "object",
      "properties": {
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreatedDate"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "LastUpdated"
        },
        "vanitySettings": {
          "$ref": "#/definitions/VanitySettings"
        },
        "weaponSettings": {
          "$ref": "#/definitions/WeaponSettings"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/meta/pkg/meta/datastores/shardsettings"
    },
    "Stats": {
      "type": "object",
      "properties": {
        "highestTrophies": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "HighestTrophies"
        },
        "totalCratesConstructed": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "TotalCratesConstructed"
        },
        "totalJumps": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "TotalJumps"
        },
        "totalKills": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "TotalKills"
        },
        "totalPlayed": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "TotalPlayed"
        },
        "totalResourcesHarvested": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "TotalResourcesHarvested"
        },
        "totalTop10": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "TotalTop10"
        },
        "totalTop5": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "TotalTop5"
        },
        "totalWins": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "TotalWins"
        },
        "weaponStats": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WeaponStats"
          },
          "x-go-name": "WeaponStats"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/stats/pkg/stats/datastores/stats"
    },
    "StatusResponseModel": {
      "type": "object",
      "properties": {
        "playerSupportBoxStatus": {
          "$ref": "#/definitions/PlayerSupportBoxStatus"
        },
        "supportBoxSettings": {
          "$ref": "#/definitions/SupportBoxSettings"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/supportbox/cmd/supportbox"
    },
    "StickerType": {
      "type": "integer",
      "format": "int32",
      "enum": [
        "0",
        "1",
        "2",
        "3"
      ],
      "x-enumnames": [
        "None",
        "BestValue",
        "FlashSale",
        "Popular"
      ],
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/store/pkg/store/enums/stickertype"
    },
    "StoreFrontData": {
      "type": "object",
      "properties": {
        "coinData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Coin"
          },
          "x-go-name": "CoinData"
        },
        "gemsData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Gem"
          },
          "x-go-name": "GemsData"
        },
        "lootBoxData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LootBoxStoreFrontData"
          },
          "x-go-name": "LootBoxes"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/store/cmd/store"
    },
    "StoreItemType": {
      "type": "integer",
      "format": "int32",
      "enum": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7"
      ],
      "x-enumnames": [
        "Coins",
        "Gems",
        "KeyDoubler",
        "BulletBox",
        "BigBox",
        "MegaBox",
        "VanityShards",
        "WeaponShards"
      ],
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/store/pkg/store/enums/storeitemtype"
    },
    "SubVariant": {
      "type": "object",
      "properties": {
        "beforePrice": {
          "type": "string",
          "x-go-name": "BeforePrice"
        },
        "price": {
          "type": "string",
          "x-go-name": "Price"
        },
        "timeLimitInMinutes": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "TimeLimitInMinutes"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/store/pkg/store/datastores/offers"
    },
    "SupportBoxSettings": {
      "type": "object",
      "properties": {
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreatedDate"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "initialCountdown": {
          "description": "In minutes",
          "type": "integer",
          "format": "int32",
          "x-go-name": "InitialCountdown"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "LastUpdated"
        },
        "loyaltyBoxCount": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "LoyaltyBoxCount"
        },
        "obtainmentInterval": {
          "description": "In minutes",
          "type": "integer",
          "format": "int32",
          "x-go-name": "ObtainmentInterval"
        },
        "supportBoxCount": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "SupportBoxCount"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/supportbox/pkg/supportbox/datastores/playersupportbox"
    },
    "Tier": {
      "type": "integer",
      "format": "int32",
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/meta/pkg/meta/datastores/gamesettings"
    },
    "TierSetting": {
      "type": "object",
      "properties": {
        "coinReward": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "CoinReward"
        },
        "keyReward": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "KeyReward"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/meta/pkg/meta/datastores/gamesettings"
    },
    "TierSettingKeyValue": {
      "type": "object",
      "properties": {
        "tier": {
          "$ref": "#/definitions/Tier"
        },
        "tierSetting": {
          "$ref": "#/definitions/TierSetting"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/meta/pkg/meta/datastores/gamesettings"
    },
    "TierSettings": {
      "type": "object",
      "properties": {
        "settings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TierSettingKeyValue"
          },
          "x-go-name": "Settings"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/meta/pkg/meta/datastores/gamesettings"
    },
    "TrophyGains": {
      "type": "object",
      "properties": {
        "kill": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "Kill"
        },
        "placements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlacementValue"
          },
          "x-go-name": "Placements"
        },
        "trophiesEarnableFromKillsCap": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "TrophiesEarnableFromKillsCap"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/meta/pkg/meta/datastores/gamesettings"
    },
    "TrophyReport": {
      "type": "object",
      "properties": {
        "rankAfterMatch": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "RankAfterMatch"
        },
        "rankBeforeMatch": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "RankBeforeMatch"
        },
        "trophiesAfterMatch": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "TrophiesAfterMatch"
        },
        "trophiesBeforeMatch": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "TrophiesBeforeMatch"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/battlereport/internal/battlereport/models"
    },
    "TrophyRoad": {
      "type": "object",
      "properties": {
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreatedDate"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "LastUpdated"
        },
        "milestones": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Milestone"
          },
          "x-go-name": "Milestones"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/trophyroad/pkg/trophyroad/datastores/trophyroad"
    },
    "UpgradeCost": {
      "type": "object",
      "properties": {
        "coinsNeeded": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "CoinsNeeded"
        },
        "shardsNeeded": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "ShardsNeeded"
        },
        "xpReward": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "XPReward"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/meta/pkg/meta/datastores/shardsettings"
    },
    "UpgradeCosts": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/UpgradeCost"
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/meta/pkg/meta/datastores/shardsettings"
    },
    "Vanity": {
      "type": "object",
      "properties": {
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreatedDate"
        },
        "default": {
          "type": "boolean",
          "x-go-name": "Default"
        },
        "excludeFromLootBoxes": {
          "type": "boolean",
          "x-go-name": "ExcludeFromLootBoxes"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "itemType": {
          "$ref": "#/definitions/ItemType"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "LastUpdated"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "rarity": {
          "$ref": "#/definitions/Rarity"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/meta/pkg/meta/datastores/vanity"
    },
    "VanityCardData": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "Amount"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/store/pkg/store/models/lootboxes"
    },
    "VanityCosts": {
      "type": "object",
      "properties": {
        "common": {
          "$ref": "#/definitions/UpgradeCosts"
        },
        "epic": {
          "$ref": "#/definitions/UpgradeCosts"
        },
        "legendary": {
          "$ref": "#/definitions/UpgradeCosts"
        },
        "rare": {
          "$ref": "#/definitions/UpgradeCosts"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/meta/pkg/meta/datastores/shardsettings"
    },
    "VanitySettings": {
      "type": "object",
      "properties": {
        "bannerColors": {
          "$ref": "#/definitions/VanityCosts"
        },
        "bannerIcons": {
          "$ref": "#/definitions/VanityCosts"
        },
        "characters": {
          "$ref": "#/definitions/VanityCosts"
        },
        "crates": {
          "$ref": "#/definitions/VanityCosts"
        },
        "emotes": {
          "$ref": "#/definitions/VanityCosts"
        },
        "graveStones": {
          "$ref": "#/definitions/VanityCosts"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/meta/pkg/meta/datastores/shardsettings"
    },
    "Variant": {
      "type": "object",
      "properties": {
        "subVariants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubVariant"
          },
          "x-go-name": "SubVariants"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/store/pkg/store/datastores/offers"
    },
    "Version": {
      "type": "object",
      "properties": {
        "QAAndroid": {
          "type": "string"
        },
        "QAIOS": {
          "type": "string"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreatedDate"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "LastUpdated"
        },
        "liveAndroid": {
          "type": "string",
          "x-go-name": "LiveAndroid"
        },
        "liveIOS": {
          "type": "string",
          "x-go-name": "LiveIOS"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/meta/pkg/meta/datastores/version"
    },
    "Weapon": {
      "type": "object",
      "properties": {
        "fullyUpgraded": {
          "type": "boolean",
          "x-go-name": "FullyUpgraded"
        },
        "fullyUpgradedCostPoints": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "FullyUpgradedCostPoints"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "level": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "Level"
        },
        "levelUpCostCoins": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "LevelUpCostCoins"
        },
        "levelUpCostPoints": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "LevelUpCostPoints"
        },
        "points": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "Points"
        },
        "xpReward": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "XPReward"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/inventory/pkg/inventory/datastores/inventory"
    },
    "WeaponData": {
      "type": "object",
      "properties": {
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreatedDate"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "inventoryId": {
          "type": "string",
          "x-go-name": "InventoryID"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "LastUpdated"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "rarity": {
          "$ref": "#/definitions/Rarity"
        }
      },
      "x-go-name": "Weapon",
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/meta/pkg/meta/datastores/weapons"
    },
    "WeaponSettings": {
      "type": "object",
      "properties": {
        "common": {
          "$ref": "#/definitions/UpgradeCosts"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/meta/pkg/meta/datastores/shardsettings"
    },
    "WeaponStats": {
      "type": "object",
      "title": "WeaponStats ...",
      "properties": {
        "amountPickedUp": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "AmountPickedUp"
        },
        "bulletsFired": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "BulletsFired"
        },
        "bulletsHit": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "BulletsHit"
        },
        "damageDealt": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "DamageDealt"
        },
        "kills": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "Kills"
        },
        "weaponId": {
          "type": "string",
          "x-go-name": "WeaponID"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/stats/pkg/stats/datastores/stats"
    },
    "WeaponUpgradeData": {
      "type": "object",
      "properties": {
        "fullyUpgraded": {
          "type": "boolean",
          "x-go-name": "FullyUpgraded"
        },
        "nextCoinsRequired": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "NextCoinsRequired"
        },
        "nextShardsRequired": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "NextShardsRequired"
        },
        "nextXpReward": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "NextXPReward"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/inventory/cmd/inventory"
    },
    "Yield": {
      "type": "object",
      "properties": {
        "max": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "Max"
        },
        "min": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "Min"
        }
      },
      "x-go-package": "gitlab.fundayfactory.com/bullet-league/backend/services/store/pkg/store/models/yield"
    }
  }
}